apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: virtualservers.fadk8sctrl.fortinet.com
spec:
  preserveUnknownFields: false
  group: fadk8sctrl.fortinet.com
  names:
    kind: VirtualServer
    plural: virtualservers
    singular: virtualserver
    shortNames:
      - vs
  scope: Namespaced
  versions:
    -
      name: v1alpha1
      served: true
      storage: true
      additionalPrinterColumns:
        - name: ADDRESS
          type: string
          jsonPath: .spec.address
        - name: PORT
          type: integer
          jsonPath: .spec.port
        - name: PROFILE
          type: string
          jsonPath: .spec.loadBalanceProfile
        - name: STATUS
          type: string
          jsonPath: .status.status
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec:
              type: object
              required:
                - address
                - contentRoutings
              properties:
                addressType:
                  type: string
                  enum: [ ipv4, ipv6 ]
                  default: ipv4
                address:
                  type: string
                  pattern: '^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])|(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$'
                port:
                  type: integer
                  minimum: 1
                  maximum: 65535
                  default: 80
                interface:
                  type: string
                  pattern: '^[a-zA-Z]+([A-z0-9-_+])*([A-z0-9])$'
                  default: port1
                loadBalanceProfile:
                  type: string
                  enum: [ LB_PROF_HTTPS, LB_PROF_HTTP ]
                loadBalanceMethod:
                  type: string
                  pattern: '^[a-zA-Z]+([A-z0-9-_+])*([A-z0-9])$'
                  default: LB_METHOD_ROUND_ROBIN
                persistence:
                  type: string
                  pattern: '^[a-zA-Z]+([A-z0-9-_+])*([A-z0-9])$'
                wafProfile:
                  type: string
                  pattern: '^[a-zA-Z]+([A-z0-9-_+])*([A-z0-9])$'
                avProfile:
                  type: string
                  pattern: '^[a-zA-Z]+([A-z0-9-_+])*([A-z0-9])$'
                dosProfile:
                  type: string
                  pattern: '^[a-zA-Z]+([A-z0-9-_+])*([A-z0-9])$'
                captchaProfile:
                  type: string
                  pattern: '^[a-zA-Z]+([A-z0-9-_+])*([A-z0-9])$'
                trafficGroup:
                  type: string
                  pattern: '^[a-zA-Z]+([A-z0-9-_+])*([A-z0-9])$'
                  default: default
                fortiview:
                  type: string
                  enum: [ enable, disable ]
                  default: disable
                trafficLog:
                  type: string
                  enum: [ enable, disable ]
                  default: disable
                wccp:
                  type: string
                  enum: [ enable, disable ]
                  default: disable
                fortigslbPublicIpType:
                  type: string
                  enum: [ ipv4, ipv6 ]
                  default: ipv4
                fortigslbPublicAddress:
                  type: string
                  pattern: '^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])|(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$'
                  default: 0.0.0.0
                fortigslbOneClick:
                  type: string
                  enum: [ enable, disable ]
                  default: disable
                fortigslbHostName:
                  type: string
                  pattern: '^([a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?\.)*([a-zA-Z0-9][-a-zA-Z0-9]*[a-zA-Z0-9])$'
                fortigslbDomainName:
                  type: string
                  pattern: '^([a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?\.)+[a-zA-Z]{2,}\.?$'
                contentRoutings:
                  type: array
                  items:
                    type: object
                    required:
                      - name
                      - RealServerPool
                    properties:
                      name:
                        type: string
                        pattern: '^[a-zA-Z]+([A-z0-9-_+])*([A-z0-9])$'
                      host:
                        type: string
                        pattern: '^(\*\.)?([a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?\.)+[a-zA-Z]{2,}$'
                      path:
                        type: string
                        pattern: '^\/([A-z0-9-_+]+\/)*([-A-z0-9_.:]+\/?)*$'
                      pathType:
                        type: string
                        enum: ["Exact", "Prefix"]
                      RealServerPool:
                        type: object
                        required:
                          - service
                          - servicePort
                        properties:
                          service:
                            type: string
                            pattern: '[a-z]([-a-z0-9]*[a-z0-9])?'
                          servicePort:
                            x-kubernetes-int-or-string: true
                            anyOf:
                              - type: integer
                              - type: string
                          serviceNamespace:
                            type: string
                            pattern: '^[a-zA-Z]+([-A-z0-9_.+:])*([A-z0-9])+$'
                natSourcePoolList:
                  type: array
                  items:
                    type: object
                    required:
                      - name
                      - interface
                      - addressMinimum
                      - addressMaximum
                    properties:
                      name:
                        type: string
                        pattern: '^[a-zA-Z]+[-A-z0-9_.]+$'
                      addressType:
                        type: string
                        enum: [ ipv4, ipv6 ]
                        default: ipv4
                      interface:
                        type: string
                        pattern: '^[a-zA-Z]+([A-z0-9-_+])*([A-z0-9])$'
                      addressMinimum:
                        type: string
                        pattern: '^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])|(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$'
                      addressMaximum:
                        type: string
                        pattern: '^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])|(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$'
                tls:
                  type: array
                  items:
                    type: object
                    properties:
                      hosts:
                        type: array
                        items:
                          type: string
                      secretName:
                        type: string
                vdom:
                  type: string
                  pattern: '^[a-zA-Z]+[-A-z0-9_.]+$'
                  x-kubernetes-validations:
                    - message: "Vdom of virtual Server can not be changed."
                      rule: self == oldSelf
              x-kubernetes-validations:
                - rule: "self.addressType != 'ipv4' || self.address.matches(r'^((25[0-5]|(2[0-4]|1?[0-9])?[0-9])\\.){3}(25[0-5]|(2[0-4]|1?[0-9])?[0-9])$')"
                  message: "When addressType is 'ipv4', address must be a valid IPv4 address."
                - rule: "self.addressType != 'ipv6' || self.address.matches(r'^([0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4}$')"
                  message: "When addressType is 'ipv6', address must be a valid IPv6 address."
                - rule: "!has(self.captchaProfile) || (has(self.wafProfile) || has(self.dosProfile))"
                  message: "captchaProfile requires wafProfile or dosProfile to be set."
                - rule: "self.fortigslbPublicIpType != 'ipv4' || self.fortigslbPublicAddress.matches(r'^((25[0-5]|(2[0-4]|1?[0-9])?[0-9])\\.){3}(25[0-5]|(2[0-4]|1?[0-9])?[0-9])$')"
                  message: "When fortigslbPublicIpType is 'ipv4', fortigslbPublicAddress must be a valid IPv4 address."
                - rule: "self.fortigslbPublicIpType != 'ipv6' || self.fortigslbPublicAddress.matches(r'^([0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4}$')"
                  message: "When fortigslbPublicIpType is 'ipv6', fortigslbPublicAddress must be a valid IPv6 address."
                - rule: "!(self.fortigslbOneClick == 'enable') || (has(self.fortigslbHostName) && has(self.fortigslbDomainName))"
                  message: "When fortigslbOneClick is 'enable', both fortigslbHostName and fortigslbDomainName must be set."
                - rule: "!has(self.fortigslbDomainName) || self.fortigslbDomainName.endsWith('.')"
                  message: "fortigslbDomainName must end with a dot ('.')."
                - rule: "!has(self.tls) || self.loadBalanceProfile == 'LB_PROF_HTTPS'"
                  message: "When 'tls' is specified, loadBalanceProfile must be 'LB_PROF_HTTPS'."
            status:
              type: object
              properties:
                vsAddress:
                  type: string
                  default: None
                status:
                  type: string
                  default: Pending
      subresources:
        status: {}
